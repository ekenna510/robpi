<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from robpift.xacro                  | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="robpi" xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller" xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface" xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- Defining the colors used in this robot -->
  <material name="black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="Red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="White">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="Green">
    <color rgba="0.0 1.0 0.0 1.0"/>
  </material>
  <!-- adding base_footprint for simulation -->
  <link name="base_footprint">
    <!--pose>0 0.1 0 0 0 0</pose  old has position not sure what t0.0111125his is-->
    <visual>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="black"/>
    </visual>
    <inertial>
      <mass value="0.0001"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <gazebo reference="base_footprint">
    <material>Gazebo/Black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <!-- base has to sit up by wheel radius  = z also I decreaseed visual box to wheel base si I can see wheels. and x by -.1 -->
  <link name="base_link">
    <!--pose>0 0.1 0 0 0 0</pose  old has position not sure what t0.0111125his is-->
    <visual>
      <geometry>
        <box size="0.001 0.001 0.001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="Red"/>
    </visual>
    <inertial>
      <mass value="0.0001"/>
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0"/>
    </inertial>
  </link>
  <!--collision name='collision'>
	  <geometry>
		<box size="${length_wheel} ${width_base} ${depth_base}"/>
	  </geometry>
	</collision-->
  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <joint name="base_link_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.0414"/>
    <parent link="base_link"/>
    <child link="chassis_link"/>
  </joint>
  <link name="chassis_link">
    <visual>
      <geometry>
        <box size="0.305 0.308 0.178"/>
      </geometry>
      <!-- per http://wiki.ros.org/urdf/XML/link a box's origin is the center of the box 
		so the way I understand this is we need to offset from the axil to the center of my base 
		to have the box show up right 
		I am estimating I have 2.75 inches in front of my axil (where I want baseink to be)
		which I think leaves 9 inches to the center of the box 
		I think this needs to be negative
		-->
      <origin rpy="0 0 0" xyz="-0.075 0 0.089"/>
      <!-- was depth_base -->
      <material name="White"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.3304 0.3334 0.2034"/>
      </geometry>
      <origin rpy="0 0 0" xyz="-0.075 0 0"/>
    </collision>
    <inertial>
      <mass value="0.9"/>
      <inertia ixx="0.009353175" ixy="0" ixz="0" iyy="0.0094911" iyz="0" izz="0.014091675"/>
      <origin xyz="-0.01 0 0"/>
    </inertial>
  </link>
  <gazebo reference="chassis_link">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
  <link name="left_wheel">
    <visual>
      <geometry>
        <cylinder length="0.009525" radius="0.0414"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="Green"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.009525" radius="0.0414"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00043605046875" ixy="0" ixz="0" iyy="0.00043605046875" iyz="0" izz="0.00085698"/>
    </inertial>
  </link>
  <gazebo reference="left_wheel">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/Green</material>
  </gazebo>
  <link name="right_wheel">
    <visual>
      <geometry>
        <cylinder length="0.009525" radius="0.0414"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <material name="Black"/>
    </visual>
    <collision>
      <geometry>
        <cylinder length="0.009525" radius="0.0414"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="1"/>
      <inertia ixx="0.00043605046875" ixy="0" ixz="0" iyy="0.00043605046875" iyz="0" izz="0.00085698"/>
    </inertial>
  </link>
  <gazebo reference="right_wheel">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="base_to_left_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="left_wheel"/>
    <origin rpy="1.5707 0 0" xyz="0 0.12075 0"/>
    <axis xyz="0 0 1"/>
  </joint>
  <joint name="base_to_right_wheel" type="continuous">
    <parent link="chassis_link"/>
    <child link="right_wheel"/>
    <origin rpy="1.5707 0 0" xyz="0 -0.12075 0"/>
    <axis xyz="0 0 1"/>
  </joint>
  <!--Caster Back  -->
  <link name="caster_link">
    <visual>
      <origin rpy="1.57079632679 0 0" xyz="0 0 0"/>
      <geometry>
        <sphere radius="0.012"/>
      </geometry>
      <material name="Blue"/>
    </visual>
    <collision>
      <geometry>
        <sphere radius="0.012"/>
      </geometry>
      <origin rpy="1.57079632679 0 0" xyz="0 0. 0"/>
    </collision>
    <inertial>
      <mass value="1"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="caster_joint" type="fixed">
    <parent link="chassis_link"/>
    <child link="caster_link"/>
    <origin rpy="0 0 0" xyz="-0.2280 0.0 -0.0294"/>
  </joint>
  <!-- R was ${-M_PI/2} -->
  <gazebo reference="caster_link">
    <turnGravityOff>false</turnGravityOff>
    <material>Gazebo/Blue</material>
  </gazebo>
  

--------

  
  <!-- laser joint -->
  <joint name="laser_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.0100 0.0 0.200"/>
    <parent link="chassis_link"/>
    <axis xyz="0 0 0"/>
    <child link="laser_frame"/>
  </joint>
  <!-- sweep Laser -->
  <link name="laser_frame">
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length=".0508" radius="0.0635"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length=".0508" radius="0.0635"/>
      </geometry>
      <material name="Blue"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- gazebo -->
  <!-- ros_control plugin -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/robot</robotNamespace>
    </plugin>
  </gazebo>
  <!-- added publishWheelJointState and publishWheelTF as true per a website  which log said were missing-->
  <!-- added wheelTorque to replace torque because log is complaining also changed to 5 from 20-->
  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <legacyMode>false</legacyMode>
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>base_to_left_wheel</leftJoint>
      <rightJoint>base_to_right_wheel</rightJoint>
      <wheelSeparation>0.2415</wheelSeparation>
      <wheelDiameter>0.0828</wheelDiameter>
      <torque>20</torque>
      <wheelTorque>5</wheelTorque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>true</publishWheelTF>
      <publishWheelJointState>true</publishWheelJointState>
      <wheelAcceleration>0.2</wheelAcceleration>
      <publishTf>true</publishTf>
    </plugin>
  </gazebo>
  <!-- hokuyo -->
  <gazebo reference="laser_frame">
    <sensor name="head_hokuyo_sensor" type="ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_laser.so" name="gazebo_ros_head_hokuyo_controller">
        <topicName>/robot/laser/scan</topicName>
        <frameName>hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>
</robot>
